// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var TaskItem, _, collection, help, htmlStr, insertUrlThen, reader, taskFun, then_;

  _ = require("lodash");

  htmlStr = require("./caoliuTemp.json");

  TaskItem = require("../../task/TaskItem");

  then_ = require("thenjs");

  help = require("../core/spiderHelper");

  collection = require("../../mongodbBase/db").spider;

  reader = {
    exurl: "http://www.reader.mx/joke/1661672",
    Type: 3
  };

  haha.getModelThen = function(url, topCont) {
    return help.getUrlThen(url).then(function(cont, data) {
      var $, model;
      model = {};
      model.Type = 1;
      $ = help.load(data);
      $ = help.load(htmlStr);
      model.Title = $("div.t td:eq(0)").html().replace("<b>本頁主題:</b>", "");
      model.Content = $("div.t2 table th:eq(1) table tr td   ").html();
      model.Url = url;
      model.AddedTime = new Date();
      return topCont(null, model);
    });
  };

  haha.getCurrentThen = function() {
    return help.getUrlThen(haha.exurl).then(function(cont, data) {
      var $, imgJokes, textJokes, urls;
      $ = help.load(data);
      imgJokes = _.map($(".recommand-joke-main-list-thumbnail .joke-text.word-wrap a"), function($a) {
        return "http://www.reader.mx" + $a.attribs.href;
      });
      textJokes = _.map($(".recommand-joke-main-list-text  a"), function($a) {
        return "http://www.reader.mx" + $a.attribs.href;
      });
      urls = _.union(imgJokes, textJokes);
      return cont(null, urls);
    });
  };

  insertUrlThen = function(url, callCont) {
    return then_(function(cont) {
      return collection.findOne({
        Url: url
      }, {}, cont);
    }).then(function(cont, doc) {
      if (doc) {
        help.showExist("url: " + url + " is already exist :");
        return callCont(null);
      } else {
        return cont();
      }
    }).then(function(cont) {
      return haha.getModelThen(url, cont);
    }).then(function(cont, model) {
      if (model.Content) {
        return collection.insert(model, cont);
      } else {
        return cont(new Error("reader get wrong content "));
      }
    }).then(function(cont, doc) {
      help.log("model is insert :" + doc.Url);
      return callCont(null);
    }).fail(function(cont, err) {
      return help.log(err);
    });
  };

  taskFun = function() {
    return haha.getCurrentThen().each(null, function(cont, url, index, urls) {
      return insertUrlThen(url, cont);
    }).then(function(cont, results) {
      return help.log("spider is over ");
    }).fail(function(cont, err) {
      return help.log(err);
    });
  };

  haha.taskItem = new TaskItem("spider.reader", taskFun);

  module.exports = haha;

}).call(this);

//# sourceMappingURL=caoliu.js.map
